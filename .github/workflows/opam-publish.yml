name: Binaryen.ml - publish to opam
on:
  release:
    types: [released]

jobs:
  build:
    name: Publish to opam
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        ocaml-version: [4.10.0]

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Setup bot user
        run: |
          git config --global user.email "bot@grain-lang.org"
          git config --global user.name "Grain Bot"

      # Some hacks to make sure opam doesn't pull the repo in a way we can't deal with
      - name: Setup opam repository
        run: |
          mkdir -p  ~/.opam/plugins/opam-publish/repos/
          git clone git://github.com/ocaml/opam-repository ~/.opam/plugins/opam-publish/repos/ocaml%opam-repository
          cd ~/.opam/plugins/opam-publish/repos/ocaml%opam-repository
          git remote add user https://${{ secrets.OPAM_RELEASE }}@github.com/grainbot/opam-repository

      # Set up our token because opam doesn't support env var tokens
      - name: Setup token
        run: |
          mkdir -p  ~/.opam/plugins/opam-publish/
          echo -n ${{ secrets.OPAM_RELEASE }} > ~/.opam/plugins/opam-publish/binaryen.token

      - name: Generate CHANGES file
        run: |
          echo -n "${{ github.event.release.body }}" > CHANGES.md

      - name: Setup OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - name: Install local dependencies
        run: |
          opam install opam-publish

      - name: Publish to opam
        run: |
          opam publish --no-browser --msg-file=CHANGES.md ${{ github.event.release.assets[0].browser_download_url }}
